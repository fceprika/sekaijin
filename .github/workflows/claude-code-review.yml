name: Claude Code Review (Manual)

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Num√©ro de la PR √† reviewer'
        required: true
        type: string
      review_focus:
        description: 'Focus de la review'
        required: false
        default: 'Code quality, security, and best practices'
        type: choice
        options:
        - 'Code quality, security, and best practices'
        - 'Performance and optimization'
        - 'Security and vulnerability assessment'
        - 'Architecture and design patterns'
        - 'Laravel best practices'

jobs:
  claude-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Checkout PR
        run: |
          gh pr checkout ${{ github.event.inputs.pr_number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          
          # Use Claude Sonnet 4 for code review
          model: "claude-sonnet-4-20250514"
          
          # Customized prompt based on user input
          direct_prompt: |
            üîç **Code Review Request - PR #${{ github.event.inputs.pr_number }}**
            
            Focus: **${{ github.event.inputs.review_focus }}**
            
            Please provide a comprehensive code review focusing on the selected area above. 
            
            For this Laravel application, please specifically check:
            
            **Security & Best Practices:**
            - SQL injection vulnerabilities and proper use of Eloquent ORM
            - XSS prevention and proper data sanitization
            - CSRF protection implementation
            - Authentication and authorization logic
            - Input validation and form requests
            - Proper use of Laravel's security features
            
            **Code Quality:**
            - Laravel conventions and best practices
            - Proper MVC architecture implementation
            - Resource usage efficiency
            - Error handling and exception management
            - Code readability and maintainability
            
            **Performance:**
            - Database query optimization (N+1 problems)
            - Proper use of eager loading
            - Caching strategies
            - Asset optimization
            
            **Architecture:**
            - Service layer implementation
            - Dependency injection usage
            - Event and listener patterns
            - Job queue implementation
            
            ‚ö†Ô∏è **Important:** 
            - Only provide review comments - DO NOT create or suggest creating any pull requests
            - Be constructive and provide specific suggestions for improvement
            - Focus on the selected review area while maintaining overall code quality standards
            - Highlight any critical security or performance issues
            
            This is a manual review requested by the maintainer.
          
          # Enable Laravel-specific tools
          allowed_tools: "Bash(php artisan route:list),Bash(composer validate),Bash(php -l),Bash(./vendor/bin/phpunit --dry-run)"
